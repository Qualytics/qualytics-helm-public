{{- if ( eq .Values.postgres.enabled true ) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: psql-deployment
  labels:
    app: psql-deployment
spec:
  replicas: 0
  template:
    metadata:
      name: psql-deployment
      labels:
        app: psql-deployment
    spec:
      imagePullSecrets:
        - name: regcred
      {{- if .Values.appNodeSelector }}
      nodeSelector:
        {{- toYaml .Values.appNodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations.appNodeTolerations }}
      tolerations:
        {{- toYaml .Values.tolerations.appNodeTolerations | nindent 8 }}
      {{- end }}
      containers:
        - name: psql-deployment
          image: "{{ tpl .Values.postgres.image.imageUrl . }}:{{ .Values.postgres.image.imageTag }}"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              sleep 60m
          volumeMounts:
            - name: postgres-snapshots-pvc
              mountPath: /mnt/postgres/data
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
      restartPolicy: Always
      volumes:
        - name: postgres-snapshots-pvc
          persistentVolumeClaim:
            claimName: postgres-snapshots-claim
  selector:
    matchLabels:
      app: psql-deployment
  {{- end }}