{{- if ( eq .Values.ingress.enabled true ) }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-api-ingress
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "50"
    {{- if ( eq .Values.certmanager.enabled true ) }}
    cert-manager.io/cluster-issuer: 'letsencrypt'
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-redirect-from: 'http'
    nginx.ingress.kubernetes.io/proxy-redirect-to: 'https'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/enable-gzip: "true"
    nginx.ingress.kubernetes.io/enable-brotli: "true"
    nginx.ingress.kubernetes.io/gzip-types: "application/json application/xml text/html text/plain application/javascript text/css application/x-javascript text/xml application/xml+rss text/javascript"
    nginx.ingress.kubernetes.io/brotli-types: "application/json application/xml text/html text/plain application/javascript text/css application/x-javascript text/xml application/xml+rss text/javascript"
    # Configure API rate limiting tied to authentication header
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
    # Enable mod security as our WAF
    nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      # Enable prevention mode. Can be any of: DetectionOnly,On,Off (default is DetectionOnly)
      SecRuleEngine On
      SecRequestBodyAccess On
      # Max request sizes in bytes (with/without files)
      # Note NGINX Ingress has its own annotations, keep in sync!
      SecRequestBodyLimit 20971520 # 20Mb
      SecRequestBodyNoFilesLimit 2621440 # 2.6Mb
      SecRequestBodyLimitAction Reject
      # Update config to include PUT/PATCH/DELETE in the allowed HTTP methods
      SecAction "id:900200,phase:1,nolog,pass,t:none,\
        setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
      # Send ModSecurity audit logs to the stdout (only for rejected requests)
      SecAuditLog /dev/stdout
      SecAuditLogParts ABCIJDEFHZ
      SecAuditLogFormat JSON
      SecAuditEngine RelevantOnly # could be On/Off/RelevantOnly
      # addresses SC-14854
      SecRule REQUEST_URI "@rx ^.*/\?(/\?)+/?$" "id:14854,phase:2,deny,status:403"
      # addresses SC-15205
      SecRuleRemoveById 949110
{{- if ( eq .Values.ingress.cors true ) }}
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, PATCH, OPTIONS, HEAD, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: 'true'
{{- else }}
    nginx.ingress.kubernetes.io/enable-cors: 'false'
{{- end }}
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI $request_uri;
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Referrer-Policy: same-origin";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src https: blob: data: 'unsafe-eval' 'unsafe-inline'; worker-src https: blob:";
      more_set_headers "Permissions-Policy: autoplay=(self),cross-origin-isolated=(self),display-capture=(self),encrypted-media=(self),fullscreen=(self),keyboard-map=(self),picture-in-picture=(self),publickey-credentials-get=(self),screen-wake-lock=(self),sync-xhr=(self)";
      more_set_headers "X-Xss-Protection: 1; mode=block";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ tpl .Values.global.dnsRecord . | quote }}
      secretName: api-tls-cert
  rules:
    - host: {{ tpl .Values.global.dnsRecord . | quote }}
      http:
        paths:
          - path: {{ .Values.hub.ingress.path | quote }}
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Release.Name }}-api-service
                port:
                  number: {{ .Values.hub.ingress.servicePort }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-frontend-ingress
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "50"
    {{- if ( eq .Values.certmanager.enabled true ) }}
    cert-manager.io/cluster-issuer: 'letsencrypt'
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-redirect-from: 'http'
    nginx.ingress.kubernetes.io/proxy-redirect-to: 'https'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/enable-gzip: "true"
    nginx.ingress.kubernetes.io/enable-brotli: "true"
    nginx.ingress.kubernetes.io/gzip-types: "application/json application/xml text/html text/plain application/javascript text/css application/x-javascript text/xml application/xml+rss text/javascript"
    nginx.ingress.kubernetes.io/brotli-types: "application/json application/xml text/html text/plain application/javascript text/css application/x-javascript text/xml application/xml+rss text/javascript"
    # Enable mod security as our WAF
    nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      # Enable prevention mode. Can be any of: DetectionOnly,On,Off (default is DetectionOnly)
      SecRuleEngine On
      SecRequestBodyAccess On
      SecRequestBodyLimitAction Reject
      # Send ModSecurity audit logs to the stdout (only for rejected requests)
      SecAuditLog /dev/stdout
      SecAuditLogParts ABCIJDEFHZ
      SecAuditLogFormat JSON
      SecAuditEngine RelevantOnly # could be On/Off/RelevantOnly
      # addresses SC-14854
      SecRule REQUEST_URI "@rx ^.*/\?(/\?)+/?$" "id:14854,phase:2,deny,status:403"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI $request_uri;
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Referrer-Policy: same-origin";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src https: blob: data: 'unsafe-eval' 'unsafe-inline'; worker-src https: blob:";
      more_set_headers "Permissions-Policy: autoplay=(self),cross-origin-isolated=(self),display-capture=(self),encrypted-media=(self),fullscreen=(self),keyboard-map=(self),picture-in-picture=(self),publickey-credentials-get=(self),screen-wake-lock=(self),sync-xhr=(self)";
      more_set_headers "X-Xss-Protection: 1; mode=block";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ tpl .Values.global.dnsRecord . | quote }}
      secretName: frontend-tls-cert
  rules:
    - host: {{ tpl .Values.global.dnsRecord . | quote }}
      http:
        paths:
          - path: {{ .Values.frontend.ingress.path | quote }}
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Release.Name }}-frontend-service
                port:
                  number: {{ .Values.frontend.ingress.servicePort }}
{{- end }}