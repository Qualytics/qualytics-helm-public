{{- if ( eq .Values.ingress.enabled true ) }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-api-ingress
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "50"
    cert-manager.io/cluster-issuer: 'letsencrypt'
    nginx.ingress.kubernetes.io/proxy-redirect-from: 'http'
    nginx.ingress.kubernetes.io/proxy-redirect-to: 'https'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf
      # Enable prevention mode. Can be any of: DetectionOnly,On,Off (default is DetectionOnly)
      SecRuleEngine On
      SecRequestBodyAccess On
      # Enable JSON parsing
      SecRule REQUEST_HEADERS:Content-Type "application/json" \
          "id:'200001',phase:1,t:none,t:lowercase,pass,nolog,\
          ctl:requestBodyProcessor=JSON"
      # Max request sizes in bytes (with/without files)
      # Note NGINX Ingress has its own annotations, keep in sync!
      SecRequestBodyLimit 20971520 # 20Mb
      SecRequestBodyNoFilesLimit 2621440 # 2.6Mb
      SecRequestBodyLimitAction Reject
      # Update config to include PUT/PATCH/DELETE in the allowed HTTP methods
      SecAction "id:900200,phase:1,nolog,pass,t:none,\
        setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
      # Send ModSecurity audit logs to the stdout (only for rejected requests)
      SecAuditLog /dev/stdout
      SecAuditLogParts ABCIJDEFHZ
      SecAuditLogFormat JSON
      SecAuditEngine RelevantOnly # could be On/Off/RelevantOnly
{{- if ( eq .Values.ingress.cors true ) }}
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, PATCH, OPTIONS, HEAD, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: 'true'
{{- else }}
    nginx.ingress.kubernetes.io/enable-cors: 'false'
{{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "sameorigin";
      add_header X-Content-Type-Options nosniff;
      add_header Referrer-Policy 'same-origin';
      more_set_headers "X-Xss-Protection: 1; mode=block";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ tpl .Values.global.dnsRecord . | quote }}
      secretName: api-tls-cert
  rules:
    - host: {{ tpl .Values.global.dnsRecord . | quote }}
      http:
        paths:
          - path: {{ .Values.hub.ingress.path | quote }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-api-service
                port:
                  number: {{ .Values.hub.ingress.servicePort }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-frontend-ingress
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "50"
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/enable-modsecurity: 'true'
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf
      # Enable prevention mode. Can be any of: DetectionOnly,On,Off (default is DetectionOnly)
      SecRuleEngine On
      SecRequestBodyAccess On
      # Enable JSON parsing
      SecRule REQUEST_HEADERS:Content-Type "application/json" \
          "id:'200001',phase:1,t:none,t:lowercase,pass,nolog,\
          ctl:requestBodyProcessor=JSON"
      SecRequestBodyLimitAction Reject
      # Send ModSecurity audit logs to the stdout (only for rejected requests)
      SecAuditLog /dev/stdout
      SecAuditLogParts ABCIJDEFHZ
      SecAuditLogFormat JSON
      SecAuditEngine RelevantOnly # could be On/Off/RelevantOnly
    nginx.ingress.kubernetes.io/proxy-redirect-from: 'http'
    nginx.ingress.kubernetes.io/proxy-redirect-to: 'https'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "sameorigin";
      add_header X-Content-Type-Options nosniff;
      add_header Referrer-Policy 'same-origin';
      more_set_headers "X-Xss-Protection: 1; mode=block";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ tpl .Values.global.dnsRecord . | quote }}
      secretName: frontend-tls-cert
  rules:
    - host: {{ tpl .Values.global.dnsRecord . | quote }}
      http:
        paths:
          - path: {{ .Values.frontend.ingress.path | quote }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-frontend-service
                port:
                  number: {{ .Values.frontend.ingress.servicePort }}
{{- end }}
